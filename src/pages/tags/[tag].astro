---
import BaseLayout from '../../layouts/BaseLayout.astro'
import Title from '../../components/Title.astro'
import PostItem from '../../components/PostItem.astro'

interface Props {
  posts: Post[];
}

type Post = {
  url: string;
  frontmatter: {
    title: string;
    pubDate: string;
    tags: string[];
    description: string;
  };
}

type GetStaticPathsResult = {
  params: {
    tag: string;
  };
  props: {
    posts: Post[]
  }
}

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const allPosts = await Astro.glob('../posts/*.md');

  const uniqueTags: any = [...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag: any) => {
    const filteredPosts = allPosts.filter((post: any) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post: any) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout title={tag}>
  <Title title={tag}/>
	{filteredPosts.map((post) => <PostItem url={post.url} title={post.frontmatter.title} date={post.frontmatter.pubDate} tags={post.frontmatter.tags} description={post.frontmatter.description} />)}
</BaseLayout>