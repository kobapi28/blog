---
import BaseLayout from '../../layouts/BaseLayout.astro'
import Title from '../../components/Title.astro'
import PostItem from '../../components/PostItem.astro'
import type { Post } from '@/libs/schema/post'
import { queryPosts } from '@/libs/query/post'
import { queryTags } from '@/libs/query/tag'

type Props = {
  tag: string
  posts: Post[]
}

export async function getStaticPaths() {
  const posts = await queryPosts()
  const tags: string[] = await queryTags()

  return tags.map((tag: string) => {
    const filteredPosts = posts.filter((post: Post) => post.tags.includes(tag))
    return {
      params: { tag },
      props: { posts: filteredPosts },
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props
const filteredPosts = posts.filter((post: Post) => post.tags.includes(tag));
---

  <BaseLayout title={tag}>
    <main>
      <Title title={tag} />
      <div class='articles'>
        {filteredPosts.map((post: Post) => (
          <PostItem
            isLast={post === filteredPosts[filteredPosts.length - 1]}
            class:list={['article']}
            url={`/posts/${post.slug}`}
            description={post.description}
            title={post.title}
            date={post.publishedAt}
            tags={post.tags}
          />
        ))}
      </div>
    </main>
  </BaseLayout>

    <style>
	main {
		padding: var(--space-xxl) var(--space-m);
	}

	.articles {
		display: flex;
		flex-direction: column;
		gap: var(--space-l);
	}

@media (width >= 768px) {
	main {
		width: 50%;
		margin: 0 auto;
	}
}
    </style>
